---
# wget (deault) or curl
- block:
  - name: Check if wget or curl is installed
    command: "which {{ nvm_install }}"
    register: cmd

  - name: Determine if install type wget
    set_fact:
      run_command: 'wget -qO-'
    when: "'/wget' in cmd.stdout"

  - name: Determine if install type curl
    set_fact:
      run_command: 'curl -o-'
    when: "'/curl' in cmd.stdout"

  - name: Create destination dir if it does not exist
    file:
      path: "{{ nvm_dir }}"
      state: directory
      mode: 0775
    when: "nvm_dir != ''"

  - name: Install NVM
    shell: "{{ run_command }} https://raw.githubusercontent.com/creationix/nvm/v{{ nvm_version }}/install.sh | NVM_SOURCE={{ nvm_source }} NVM_DIR={{ nvm_dir }} PROFILE={{ nvm_profile }} bash"
    args:
      warn: false
    register: nvm_result

  when: "nvm_install == 'curl' or  nvm_install == 'wget'"

# git
- block:
    - name: Check if git is installed
      command: "which {{ nvm_install }}"
      register: cmd

    - name: Remove NVM to nvm_profile
      blockinfile:
        path: "{{ nvm_profile }}"
        state: absent
        block: |
          export NVM_DIR="$HOME/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh" # This loads nvm

    - name: Install via git
      git:
        repo: 'https://github.com/creationix/nvm.git .nvm'
        dest: "{{ nvm_dir }}"
        version: "{{ nvm_version }}"
      when: "'/git' in cmd.stdout"

    - name: Add NVM to nvm_profile
      blockinfile:
        path: "{{ nvm_profile }}"
        create: yes
        state: present
        mode: 0644
        block: |
          export NVM_DIR="$HOME/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh" # This loads nvm

  when: "nvm_install == 'git'"

- name: Check NVM Version
  shell: bash -ic "nvm --version"
  register: version_response

- name: LTS Check
  set_fact:
    nodejs_version: --lts
  when: "nodejs_version == 'lts'"

- name: Install Node if nvm_commands is empty
  shell: bash -ic "nvm install {{ nodejs_version }}"
  when: "nvm_commands | length == 0"

- name: Install Node
  shell: bash -ic "{{item}}"
  with_items:
    "{{ nvm_commands }}"
  register:     nodejs_installed
  changed_when: nodejs_installed.stderr.find("is already installed") < 0
